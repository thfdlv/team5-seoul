<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.jsonExam.community.post.PostMapper">

    <resultMap id="postResultMap" type="com.example.jsonExam.community.post.PostDTO">
	    <id property="id" column="id"/>
	    <result property="title" column="title"/>
	    <result property="content" column="content"/>
	    <result property="author" column="author"/>
	    <result property="authorId" column="authorId"/>
	    <result property="createdAt" column="created_at" javaType="java.sql.Timestamp"/>
	    <result property="likeCount" column="likeCount"/>  <!-- ✅ 추가 -->
	</resultMap>

    <select id="getAllPosts" resultMap="postResultMap">
	    SELECT 
	        p.*, 
	        (SELECT COUNT(*) FROM post_likes pl WHERE pl.post_id = p.id) AS likeCount
	    FROM posts p
	    ORDER BY p.createdAt DESC;
	</select>
	
	<select id="getPostById" parameterType="int" resultMap="postResultMap">
	    SELECT 
	        p.*, 
	        (SELECT COUNT(*) FROM post_likes pl WHERE pl.post_id = p.id) AS likeCount
	    FROM posts p
	    WHERE p.id = #{id};
	</select>

    <insert id="createPost" parameterType="com.example.jsonExam.community.post.PostDTO">
        INSERT INTO posts (title, content, author, authorId, createdAt)
        VALUES (#{title}, #{content}, #{author}, #{authorId}, NOW());
    </insert>

    <update id="updatePost" parameterType="com.example.jsonExam.community.post.PostDTO">
        UPDATE posts SET title = #{title}, content = #{content} WHERE id = #{id};
    </update>

    <delete id="deletePost" parameterType="int">
        DELETE FROM posts WHERE id = #{id};
    </delete>

</mapper>
