<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.jsonExam.community.comment.CommentMapper">

    <resultMap id="commentResultMap" type="com.example.jsonExam.community.comment.CommentDTO">
        <id property="id" column="id"/>
        <result property="postId" column="postId"/>
        <result property="author" column="author"/>
        <result property="authorId" column="authorId"/>
        <result property="content" column="content"/>
        <result property="createdAt" column="created_at" javaType="java.sql.Timestamp"/>
    	<result property="likeCount" column="likeCount"/> 
    </resultMap>

	<select id="getCommentsByPostId" resultMap="commentResultMap" parameterType="int">
	    SELECT 
	        c.*, 
	        (SELECT COUNT(*) FROM comment_likes cl WHERE cl.comment_id = c.id) AS likeCount
	    FROM comments c
	    WHERE c.postId = #{postId}
	    ORDER BY c.createdAt DESC;
	</select>

    <insert id="addComment" parameterType="com.example.jsonExam.community.comment.CommentDTO">
        INSERT INTO comments (postId, author, authorId, content, createdAt)
        VALUES (#{postId}, #{author}, #{authorId}, #{content}, NOW());
    </insert>

    <delete id="deleteComment" parameterType="int">
        DELETE FROM comments WHERE id = #{id};
    </delete>

    <select id="getCommentById" parameterType="int" resultType="com.example.jsonExam.community.comment.CommentDTO">
        SELECT * FROM comments WHERE id = #{id};
    </select>

</mapper>
